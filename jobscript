#!/bin/bash 

#rj name=distributed-ml-test
#rj queue=test
#rj features=v100x4
#rj nodes=2
#rj taskspernode=4

msg() { echo "$*" >&2; }
die() { msg "!!! FATAL ERROR: $*"; exit 1; }

# Modules
module unload cuda
module unload gcc
module unload openmpi

module add cuda/11.2
module add cuda/nccl_2.8.4-1+cuda11.2
module add openmpi

# Environment Variables
export TFDS_DATA_DIR="/p9/dug/teamhpc/liaml/ml/distributed/data"

TEST_NAME="default-test-name"
VENV_NAME="venv"
DATA_NAME="mnist.npz"
EXE_NAME="singleNode.py"
EXE_PATH="tensorflow" # tensorflow / pytorch

ROOT="/p9/dug/teamhpc/liaml/ml/distributed"
VENV="${ROOT}/${VENV_NAME}/bin/activate"
EXE="${ROOT}/${EXE_PATH}/${EXE_NAME}"
DATA="${ROOT}/data/${DATA_NAME}"
OUTPUT="${ROOT}/output/${TEST_NAME}"

num_epochs=10
batch_size=128

msg
msg "### Test Name: ${TEST_NAME}"

# Basic Checks
[[ -d ${OUTPUT} ]] && die "Output dir (${OUTPUT}) already exists"
mkdir ${OUTPUT}
msg "### Output Dir: ${OUTPUT}"

[[ -f ${EXE} ]] || die "Can't find ${EXE}"
msg "### EXE: ${EXE}"

source "${VENV}"
[[ -z ${VIRTUAL_ENV} ]] && die "Can't activate ${VENV}"
msg "### VENV: ${VENV}"

exeArgs="
    --num-epochs=${num_epochs}
    --batch-size=${batch_size}
    --data=${DATA}
    --output=${OUTPUT}
"

mpiArgs="
    -np ${SLURM_NTASKS}
    -bind-to none -map-by slot
    -x NCCL_DEBUG=INFO -x LD_LIBRARY_PATH -x PATH
    -mca pml ucx
    -mca orte_base_help_aggregate 0
"

time mpirun $mpiArgs python $EXE $exeArgs
